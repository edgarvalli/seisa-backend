{"version":3,"sources":["helpers/config.js","helpers/request.js","views/DetalleProyecto.jsx"],"names":["api","headers","method","Accept","get","url","undefined","this","body","fetch","req","ok","error","message","statusText","json","res","post","params","JSON","stringify","delete","RenderItems","items","renderItem","map","options","view","label","DetalleProyecto","props","navigation","state","cuentas","others","showLoader","GetCategories","console","log","request","projectId","projectCode","response","alert","setState","data","show","onClick","go","container","item","sm","projectName","key","id","code","name","presupuesto","toLocaleString","maximumFractionDigits","ordenesCompra","accountCode","accountId","colSpan","React","Component"],"mappings":"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","file":"static/js/6.7f8ffebd.chunk.js","sourcesContent":["// const host = 'http://localhost:3080';\r\nexport const api ='/api/proyectos'","import { api } from \"./config\";\r\n\r\nexport default {\r\n  headers: {\r\n    method: \"get\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  },\r\n  async get(url) {\r\n    try {\r\n      if (this.headers.body !== undefined) delete this.headers.body;\r\n      this.headers.method = \"get\";\r\n      const req = await fetch(api + url, this.headers);\r\n      if (!req.ok) return { error: true, message: req.statusText };\r\n      const res = await req.json();\r\n      return res;\r\n    } catch (message) {\r\n      return { error: true, message };\r\n    }\r\n  },\r\n  async post(url, params = {}) {\r\n    try {\r\n      this.headers.body = JSON.stringify(params);\r\n      this.headers.method = \"post\";\r\n      const req = await fetch(api + url, this.headers);\r\n      if (!req.ok) return { error: true, message: req.statusText };\r\n      const res = await req.json();\r\n      return res;\r\n    } catch (message) {\r\n      return { error: true, message };\r\n    }\r\n  },\r\n  async delete(url) {\r\n    try {\r\n      if (this.headers.body !== undefined) delete this.headers.body;\r\n      this.headers.method = \"delete\";\r\n      const req = await fetch(api + url, this.headers);\r\n      if (!req.ok) return { error: true, message: req.statusText };\r\n      const res = await req.json();\r\n      return res;\r\n    } catch (message) {\r\n      return { error: true, message };\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Icon,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport request from \"../helpers/request\";\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst RenderItems = ({ items = [], renderItem }) => items.map(renderItem);\r\nconst options = [\r\n  {\r\n    view: \"Proyectos\",\r\n    label: \"Proyectos\"\r\n  },\r\n  {\r\n    view: \"EditarProyecto\",\r\n    label: \"Edici√≥n\"\r\n  }\r\n];\r\nclass DetalleProyecto extends React.Component {\r\n  params = this.props.navigation.params();\r\n  state = {\r\n    cuentas: [],\r\n    others: 0.0,\r\n    showLoader: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetCategories();\r\n  }\r\n\r\n  async GetCategories() {\r\n    const state = {\r\n      cuentas: [],\r\n      others: 1,\r\n      showLoader: false\r\n    };\r\n    console.log(this.params)\r\n\r\n    let response = await request.get(\r\n      `/cuentas?projectId=${this.params.projectId}&projectCode=${this.params.projectCode}`\r\n    );\r\n    if (response.error) {\r\n      alert(\"Favor de revisar error en la consola\");\r\n      console.log(response.message);\r\n      this.setState({ showLoader: false });\r\n      return;\r\n    }\r\n    state.cuentas = response.data;\r\n    ///accounts-others\r\n    response = await request.get(\r\n      `/otras-cuentas?segmento=${this.params.projectCode}`\r\n    );\r\n\r\n    if (response.error) {\r\n      alert(\"Favor de revisar error en la consola\");\r\n      console.log(response.message);\r\n      this.setState({ showLoader: false });\r\n      return;\r\n    }\r\n    state.others = response.data;\r\n    this.setState(state);\r\n  }\r\n\r\n  render() {\r\n    const { showLoader, cuentas } = this.state;\r\n    return (\r\n      <>\r\n        <Loader show={showLoader} />\r\n        <Navbar\r\n          options={options}\r\n          onClick={view => this.props.navigation.go(view)}\r\n        />\r\n        <Grid container>\r\n          <Grid item sm={12}>\r\n            <Typography>\r\n              Proyecto {this.params.projectCode} - {this.params.projectName}\r\n            </Typography>\r\n          </Grid>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Codigo</TableCell>\r\n                <TableCell>Nombre</TableCell>\r\n                <TableCell>Presupuesto</TableCell>\r\n                <TableCell>Ordenes de Compra</TableCell>\r\n                <TableCell>Resta</TableCell>\r\n                <TableCell>Acciones</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <RenderItems\r\n                items={cuentas}\r\n                renderItem={item => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>{item.code}</TableCell>\r\n                    <TableCell>{item.name}</TableCell>\r\n                    <TableCell>\r\n                      ${item.presupuesto.toLocaleString(\"es-Mx\", {\r\n                        maximumFractionDigits: 2\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      ${item.ordenesCompra.toLocaleString(\"es-Mx\", {\r\n                        maximumFractionDigits: 2\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      ${(item.presupuesto - item.ordenesCompra).toLocaleString(\r\n                        \"es-Mx\",\r\n                        {\r\n                          maximumFractionDigits: 2\r\n                        }\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        onClick={() =>\r\n                          this.props.navigation.go(\"Subcuentas\", {\r\n                            projectId: this.params.projectId,\r\n                            projectCode: this.params.projectCode,\r\n                            projectName: this.params.projectName,\r\n                            accountCode: item.code,\r\n                            accountId: item.id\r\n                          })\r\n                        }\r\n                      >\r\n                        <Icon>format_align_justify</Icon>\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n              />\r\n              <TableRow>\r\n                <TableCell>Otros</TableCell>\r\n                <TableCell>OTROS</TableCell>\r\n                <TableCell colSpan={3}>\r\n                  {this.state.others.toLocaleString(\"es-Mx\", {\r\n                    maximumFractionDigits: 2\r\n                  })}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    onClick={() =>\r\n                      this.props.navigation.go(\"DetalleCuentasOtros\", {\r\n                        others: true,\r\n                        projectId: this.params.projectId,\r\n                        projectCode: this.params.projectCode,\r\n                        projectName: this.params.projectName\r\n                      })\r\n                    }\r\n                  >\r\n                    <Icon>format_align_justify</Icon>\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetalleProyecto;\r\n"],"sourceRoot":""}