{"version":3,"sources":["helpers/config.js","helpers/request.js","views/DetalleCuentas.jsx"],"names":["api","headers","method","Accept","get","url","undefined","this","body","fetch","req","ok","error","message","statusText","json","res","post","params","JSON","stringify","delete","RenderItems","items","renderItem","map","RenderTable","length","Object","keys","header","key","item","Id","i","cuenta","toLocaleString","maximumFractionDigits","options","view","label","DetalleCuentas","props","navigation","state","showLoader","accounts","GetMoves","response","others","request","projectCode","alert","console","log","setState","data","show","onClick","go","container","sm","projectName","React","Component"],"mappings":"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","file":"static/js/4.80cb8075.chunk.js","sourcesContent":["// const host = 'http://localhost:3080';\r\nexport const api ='/api/proyectos'","import { api } from \"./config\";\r\n\r\nexport default {\r\n  headers: {\r\n    method: \"get\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  },\r\n  async get(url) {\r\n    try {\r\n      if (this.headers.body !== undefined) delete this.headers.body;\r\n      this.headers.method = \"get\";\r\n      const req = await fetch(api + url, this.headers);\r\n      if (!req.ok) return { error: true, message: req.statusText };\r\n      const res = await req.json();\r\n      return res;\r\n    } catch (message) {\r\n      return { error: true, message };\r\n    }\r\n  },\r\n  async post(url, params = {}) {\r\n    try {\r\n      this.headers.body = JSON.stringify(params);\r\n      this.headers.method = \"post\";\r\n      const req = await fetch(api + url, this.headers);\r\n      if (!req.ok) return { error: true, message: req.statusText };\r\n      const res = await req.json();\r\n      return res;\r\n    } catch (message) {\r\n      return { error: true, message };\r\n    }\r\n  },\r\n  async delete(url) {\r\n    try {\r\n      if (this.headers.body !== undefined) delete this.headers.body;\r\n      this.headers.method = \"delete\";\r\n      const req = await fetch(api + url, this.headers);\r\n      if (!req.ok) return { error: true, message: req.statusText };\r\n      const res = await req.json();\r\n      return res;\r\n    } catch (message) {\r\n      return { error: true, message };\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\nimport request from \"../helpers/request\";\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst RenderItems = ({ items = [], renderItem }) => items.map(renderItem);\r\nconst RenderTable = ({ items = [] }) => {\r\n  if (items.length > 0) {\r\n    const headers = Object.keys(items[0]);\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* Se recorre los encabezados que trae directo de la base de datos */}\r\n            {headers.map(header => (\r\n              <TableCell key={header}>{header}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {/*\r\n            Se recorre todos los documentos usando el array de encabezados para tomarlos como llave\r\n            se determina si es el total para convertilo con la funcion toLocaleString\r\n          */}\r\n          <RenderItems\r\n            items={items}\r\n            renderItem={item => (\r\n              <TableRow key={item.Id}>\r\n                {headers.map((header, i) => {\r\n                  if (header === \"Total\") {\r\n                    return (\r\n                      <TableCell key={item.cuenta + \"_\" + i}>\r\n                        ${item[header].toLocaleString(\"es-MX\", {\r\n                          maximumFractionDigits: 2\r\n                        })}\r\n                      </TableCell>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <TableCell key={item.cuenta + \"_\" + i}>\r\n                        {item[header]}\r\n                      </TableCell>\r\n                    );\r\n                  }\r\n                })}\r\n              </TableRow>\r\n            )}\r\n          />\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nconst options = [\r\n  {\r\n    view: \"Proyectos\",\r\n    label: \"Proyectos\"\r\n  },\r\n  {\r\n    view: \"EditarProyecto\",\r\n    label: \"Edici√≥n\"\r\n  }\r\n];\r\n\r\nclass DetalleCuentas extends React.Component {\r\n  params = this.props.navigation.params();\r\n  state = {\r\n    showLoader: true,\r\n    accounts: []\r\n  };\r\n  componentDidMount() {\r\n    this.GetMoves();\r\n  }\r\n\r\n  async GetMoves() {\r\n    try {\r\n      let response = null;\r\n      if (this.params.others) {\r\n        response = await request.get(\r\n          `/detalle-cuentas?segmento=${this.params.projectCode}&code=SP&otros=ok`\r\n        );\r\n      } else {\r\n        response = await request.get(\r\n          `/detalle-cuentas?segmento=${this.params.projectCode}&cuenta=${this.params.cuenta}`\r\n        );\r\n      }\r\n\r\n      if (response.error) {\r\n        alert(\"Ocurrio un error favor de ver la consola\");\r\n        console.log(response.message);\r\n        this.setState({ showLoader: false });\r\n        return;\r\n      }\r\n      this.setState({\r\n        showLoader: false,\r\n        accounts: response.data\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Ocurrio un error favor de ver la consola\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { showLoader, accounts } = this.state;\r\n    return (\r\n      <>\r\n        <Loader show={showLoader} />\r\n        <Navbar\r\n          options={options}\r\n          onClick={view => this.props.navigation.go(view)}\r\n        />\r\n        <Grid container>\r\n          <Grid item sm={12}>\r\n            <Typography>\r\n              Proyecto {this.params.projectCode} - {this.params.projectName}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <RenderTable items={accounts} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetalleCuentas;\r\n"],"sourceRoot":""}